<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager" />
	    <property name="successUrl" value="/index.htm" />
	    <property name="loginUrl" value="/login.htm" />
	    <property name="unauthorizedUrl" value="/error.htm" />
	    <property name="filters">
	      <map>
	        <!-- <entry key="authc" value-ref="formAuthenticationFilter"></entry> -->
	        <entry key="authc">
	        	<bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>
	        </entry>
	      </map>
	    </property>
	    <property name="filterChainDefinitions">
	      <value>
	        /=anon 
         	/login.do*=authc 
         	/logout.do*=anon 
        	# 权限配置示例
         	/security/account/view.do=authc,perms[SECURITY_ACCOUNT_VIEW] 
         	/** = authc 
	  	  </value>
	    </property>
  </bean>
  <!-- 
  	shiroFilter 中 filterChainDefinitions 属性，
  	anon 表示匿名访问（不需要认证与授权），
  	authc 表示需要认证，
  	perms[SECURITY_ACCOUNT_VIEW] 表示用户需要提供值为“SECURITY_ACCOUNT_VIEW”Permission 信息。
  	由此可见，连接地址配置为 authc 或 perms[XXX] 表示为受保护资源。
   -->
  
  <bean id="shiroRealm" class="com.jsprite.web.commons.UserNamePasswordRealm" />

  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="realm" ref="shiroRealm" />
    <!-- 需要使用cache的话加上这句-->
    <property name="cacheManager" ref="shiroEhcacheManager" />
  </bean>

  <!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 -->
  <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    <property name="cacheManagerConfigFile" value="classpath:config/sys/ehcache.xml" />
  </bean>

  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
    depends-on="lifecycleBeanPostProcessor">
    <property name="proxyTargetClass" value="true" />
  </bean>
  <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager" />
  </bean>
  <!-- 配置为基于表单认证的过滤器。 -->
  <!-- <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"/> -->
</beans>