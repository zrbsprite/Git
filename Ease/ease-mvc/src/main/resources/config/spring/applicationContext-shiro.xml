<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager" />
	    <property name="successUrl" value="/index.html" />
	    <property name="loginUrl" value="/login/index.htm" />
	    <property name="unauthorizedUrl" value="/unauthorized.html" />
	    <!-- The 'filters' property is usually not necessary unless performing an override, which we  
             want to do here (make authc point to a PassthruAuthenticationFilter instead of the  
             default FormAuthenticationFilter: -->  
	    <property name="filters">
	      <map>
	      	<!-- 这里可以配置多个过滤器达到拦截不同的请求作出不同的校验 -->
	        <entry key="authc" value-ref="formAuthenticationFilter"></entry>
       	    <!-- <entry key="authc"><bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/></entry> -->
	      </map>
	    </property>
	    <property name="filterChainDefinitions">
	      <value>
         	/**/*download.htm=authc
         	/logout.htm=logout
         	/sys/*.htm=user 
         	/anon/**=anon
         	/resources/**=anon
         	/login/logout.htm=logout
         	/login/**=anon
         	/admin/**=authc,roles[admin,sys]
         	/admin/*.htm=user,roles[admin,sys]
         	/**/*.html=anon
         	/=anon
         	/**=user
	  	  </value>
	  	  <!-- 
	  	  	这里的authc对应 filters里面的key=authc，同理...
	  	  	/**=user 表示访问该地址的用户是身份验证通过或RememberMe 登录的都可以
	  	  -->
	    </property>
  </bean>
  <!-- 
  	shiroFilter 中 filterChainDefinitions 属性，
  	anon 表示匿名访问（不需要认证与授权），
  	authc 表示需要认证，
  	perms[SECURITY_ACCOUNT_VIEW] 表示用户需要提供值为“SECURITY_ACCOUNT_VIEW”Permission 信息。
  	由此可见，连接地址配置为 authc 或 perms[XXX] 表示为受保护资源。
   -->
  
  <bean id="shiroRealm" class="com.jsprite.web.commons.UserNamePasswordRealm">
  	<property name="cacheManager" ref="shiroEhcacheManager"></property>
  </bean>

  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
    <property name="realm" ref="shiroRealm" />
    <!-- 需要使用cache的话加上这句-->
    <property name="cacheManager" ref="shiroEhcacheManager" />
    <property name="rememberMeManager" ref="rememberMeManager"/>
  </bean>

  <!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 -->
  <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    <property name="cacheManagerConfigFile" value="classpath:config/sys/ehcache.xml" />
  </bean>

  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
    depends-on="lifecycleBeanPostProcessor">
    <property name="proxyTargetClass" value="true" />
  </bean>
  <!-- 如上配置用于开启 Shiro Spring AOP 权限注解的支持； 
  		<aop:config proxy-target-class="true">表示代理类 -->
  <aop:config proxy-target-class="true"></aop:config>
  <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager" />
  </bean>

	<!-- 
		基于 Form 表单的身份验证过滤器 重写参数 
		rememberMeParam，即 rememberMe 请求参数名 ,boolean类型
	-->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="loginUrl" value="/login.htm" />
		<property name="rememberMeParam" value="rememberMe"/>
	</bean> 
	
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie"> 
	    <constructor-arg value="rememberMe"/> 
	    <property name="httpOnly" value="true"/> 
	    <property name="maxAge" value="2592000"/><!-- 30 天 --> 
	</bean>
	<!-- rememberMe 管理器 --> 
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
</beans>