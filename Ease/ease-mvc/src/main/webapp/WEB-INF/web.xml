<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="ease-web" version="2.5">
	<display-name>Ease spring mvc</display-name>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>
			classpath:log4j.properties
		</param-value>
		<!-- <param-value> /WEB-INF/classes/log4j.properties </param-value> -->
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:applicationContext.xml,
			classpath:config/spring/applicationContext-init.xml
		</param-value>
	</context-param>
	
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>
			classpath:log4j.properties
		</param-value>
		<!-- <param-value> /WEB-INF/classes/log4j.properties </param-value> -->
	</context-param>
	<!-- <context-param>    
	    <param-name>log4jRefreshInterval</param-name>    
	    <param-value>60000</param-value>    
	</context-param> -->
	
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 可以使用RequestContextHolder.currentRequestAttributes() 获取到请求的attr -->
    <!-- <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener> -->
	<!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:mvc-config.xml</param-value>
		</init-param>
		<!-- load-on-startup应该在init-param下面 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>
	
	<filter>
		<filter-name>CharacterEncoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>openSessionInView</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>openSessionInView</filter-name>
		<url-pattern>*.html</url-pattern>
		<!-- <url-pattern>/admin/*</url-pattern> -->
	</filter-mapping>
	
	<!-- druid配置 -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
     </servlet>
     <servlet-mapping>
         <servlet-name>DruidStatView</servlet-name>
         <url-pattern>/druid/*</url-pattern>
     </servlet-mapping>
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
         <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
         <init-param>
             <param-name>exclusions</param-name>
             <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
         </init-param>
    </filter>
    <filter-mapping>
         <filter-name>DruidWebStatFilter</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>
	<!-- druid配置 complete -->
	
	<!-- 配置Url重写过滤器 -->
	<!-- 
	  <filter>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		    <init-param>
		           <param-name>logLevel</param-name>
		           <param-value>WARN</param-value>
	      	</init-param>
		    <init-param>
		           <param-name>confPath</param-name>
		           <param-value>config/mvc/urlrewrite.xml</param-value>
	      	</init-param>
	  </filter>
	 <filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	 -->
	 
	<!-- 缓存、gzip压缩核心过滤器 -->
	<!-- <filter>
		<filter-name>PageEhCacheFilter</filter-name>
		<filter-class>com.jsprite.web.commons.PageEhCacheFilter</filter-class>
		<init-param>
			<param-name>patterns</param-name>
			<param-value>/cache.jsp, product.action, market.action </param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>PageEhCacheFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>PageEhCacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping> -->
	 
	<!--spring + shiro configuration start(spring与shiro集成)-->
	<!-- DelegatingFilterProxy作用是自动到spring容器查找名字为shiroFilter（filter-name）的bean并把所有Filter的操作委托给它. -->
   <filter>  
        <filter-name>shiroFilter</filter-name>  
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
        <init-param>  
            <param-name>targetFilterLifecycle</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>shiroFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
	 <!--spring + shiro configuration end(spring与shiro集成)-->
	 
	<!-- 验证码 -->
	<servlet>
		<servlet-name>check-code</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>check-code</servlet-name>
		<url-pattern>/images/vcode.jpg</url-pattern>
	</servlet-mapping>
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<error-page>  
    	<error-code>404</error-code>  
    	<location>/400.html</location>  
	</error-page>
	<error-page>  
    	<error-code>500</error-code>  
    	<location>/500.html</location>  
	</error-page>
	 <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/error.html</location>
    </error-page>
</web-app>
